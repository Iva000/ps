/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form;

import communication.Communication;
import domain.City;
import form.table.PeopleTableModel;
import form.util.FormMode;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author Iva
 */
public class Person extends javax.swing.JDialog {

    /**
     * Creates new form Pearson
     */
    
    private FormMode formMode;
    
    public Person(java.awt.Frame parent, boolean modal, FormMode formMode, domain.Person person) {
        super(parent,"Dodavanje novog vlasnika", modal);
        initComponents();
        pack();
        this.setLocationRelativeTo(null);
        this.formMode = formMode;
        prepareForm(person);
        setupMode(formMode);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        comboCity = new javax.swing.JComboBox<>();
        txtJmbg = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtSurname = new javax.swing.JTextField();
        txtYear = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        btnSave = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnMakeChanges = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Vlasnik"));

        jLabel1.setText("JMBG:");

        jLabel2.setText("Ime:");

        jLabel3.setText("Prezime:");

        jLabel4.setText("Goodina rođenja:");

        jLabel5.setText("Grad:");

        jLabel6.setText("Broj telefona:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(91, 91, 91)
                        .addComponent(txtSurname))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(45, 45, 45)
                        .addComponent(txtYear))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel2))
                        .addGap(66, 66, 66)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtName)
                            .addComponent(txtPhone, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(comboCity, 0, 132, Short.MAX_VALUE)
                                .addComponent(txtJmbg)))))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel1)
                    .addComponent(txtJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(txtSurname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(txtYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5)
                            .addComponent(comboCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6))
                    .addComponent(txtPhone, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        btnSave.setText("Sačuvaj");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnEdit.setText("Izmeni");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Obriši");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnMakeChanges.setText("Napravi izmene");
        btnMakeChanges.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMakeChangesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnMakeChanges)
                        .addGap(40, 40, 40)
                        .addComponent(btnEdit)
                        .addGap(37, 37, 37)
                        .addComponent(btnDelete)
                        .addGap(36, 36, 36)
                        .addComponent(btnSave))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(93, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave)
                    .addComponent(btnEdit)
                    .addComponent(btnDelete)
                    .addComponent(btnMakeChanges))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            domain.Person person = new domain.Person();
            if(checkPerson()){
            person.setJmbg(txtJmbg.getText().trim());
            person.setName(txtName.getText().trim());
            person.setSurname(txtSurname.getText().trim());
            person.setCity((City)comboCity.getSelectedItem());
            person.setYear(Integer.valueOf(txtYear.getText().trim()));
            person.setPhoneNumber(txtPhone.getText().trim());
            
            if(Communication.getInstance().getAllPeople().contains(person)){
                JOptionPane.showMessageDialog(this, "Vlasnik ovih karakretistika već postoji u bazi!");
            }else{
                Communication.getInstance().addPerson(person);
                JOptionPane.showMessageDialog(this, "Novi vlasnik je uspesno dodat!");
                this.dispose();
            }
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnMakeChangesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMakeChangesActionPerformed
        formMode = FormMode.FORM_EDIT;
        setupMode(formMode);
    }//GEN-LAST:event_btnMakeChangesActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        try {
            domain.Person person = new domain.Person();
            person.setJmbg(txtJmbg.getText().trim());
            person.setName(txtName.getText().trim());
            person.setSurname(txtSurname.getText().trim());
            person.setCity((City)comboCity.getSelectedItem());
            person.setYear(Integer.valueOf(txtYear.getText().trim()));
            person.setPhoneNumber(txtPhone.getText().trim());
            Communication.getInstance().deletePerson(person);
            
            JOptionPane.showMessageDialog(this, "Vlasnik je uspešno obrisan!");
            this.dispose();
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        try {
            domain.Person person = new domain.Person();
            if(checkPerson()){
            person.setJmbg(txtJmbg.getText().trim());
            person.setName(txtName.getText().trim());
            person.setSurname(txtSurname.getText().trim());
            person.setCity((City)comboCity.getSelectedItem());
            person.setYear(Integer.valueOf(txtYear.getText().trim()));
            person.setPhoneNumber(txtPhone.getText().trim());
            Communication.getInstance().editPerson(person);
            
            JOptionPane.showMessageDialog(this, "Vlasnik je uspešno izmenjen!");
            this.dispose();
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnEditActionPerformed

    /**
     * @param args the command line arguments
     */
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnMakeChanges;
    private javax.swing.JButton btnSave;
    private javax.swing.JComboBox<Object> comboCity;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtJmbg;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSurname;
    private javax.swing.JTextField txtYear;
    // End of variables declaration//GEN-END:variables

    private void prepareForm(domain.Person person) {
        try {
            List<City> cities = Communication.getInstance().getAllCities();
            getComboCity().setModel(new DefaultComboBoxModel<>(cities.toArray()));
            getComboCity().setSelectedIndex(0);
            
            if(person != null){
               txtJmbg.setText(person.getJmbg());
               txtName.setText(person.getName());
               txtSurname.setText(person.getSurname());
               txtYear.setText(String.valueOf(person.getYear()));
               txtPhone.setText(person.getPhoneNumber());
               comboCity.setSelectedIndex(person.getCity().getId()-1);
            }
        } catch (Exception ex) {
            Logger.getLogger(Person.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public JComboBox<Object> getComboCity() {
        return comboCity;
    }

    private void setupMode(FormMode formMode) {
        switch(formMode){
            case FORM_ADD:
                btnDelete.setEnabled(false);
                btnEdit.setEnabled(false);
                btnSave.setEnabled(true);
                btnMakeChanges.setEnabled(false);
            break;
            case FORM_VIEW:
                btnDelete.setEnabled(true);
                btnEdit.setEnabled(false);
                btnSave.setEnabled(false);
                btnMakeChanges.setEnabled(true);
                
                txtJmbg.setEditable(false);
                txtName.setEditable(false);
                txtSurname.setEditable(false);
                txtPhone.setEditable(false);
                txtYear.setEditable(false);
                comboCity.setEditable(false);
            break;
            case FORM_EDIT:
                btnDelete.setEnabled(false);
                btnEdit.setEnabled(true);
                btnSave.setEnabled(false);
                btnMakeChanges.setEnabled(false);
                
                txtJmbg.setEditable(false);
                txtName.setEditable(true);
                txtSurname.setEditable(true);
                txtPhone.setEditable(true);
                txtYear.setEditable(true);
                comboCity.setEditable(true);
            break;
        }
    }
    
    public boolean checkPerson(){
        if(txtJmbg.getText()== null || txtJmbg.getText().isEmpty() || txtName.getText()== null || txtName.getText().isEmpty() || txtSurname.getText()== null || txtSurname.getText().isEmpty() || txtPhone.getText()== null || txtPhone.getText().isEmpty() || txtYear.getText()== null || txtYear.getText().isEmpty() || comboCity.getSelectedIndex()== -1){
            JOptionPane.showMessageDialog(this, "Sva polja moraju biti popunjena!");
            return false;
        }
        return true;
    }
    
    
}
